// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetBanking.Infrastructure.Persistence.Contexts;

namespace NetBanking.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220729011743_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NetBanking.Core.Domain.Entities.BankProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BankProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cuenta de ahorro"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tarjeta de crédito"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Préstamo"
                        });
                });

            modelBuilder.Entity("NetBanking.Core.Domain.Entities.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<int>("IdProducType")
                        .HasColumnType("int");

                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Limit")
                        .HasColumnType("real");

                    b.Property<int>("MainProduct")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProducType");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NetBanking.Core.Domain.Entities.Recipients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdRecipient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipients");
                });

            modelBuilder.Entity("NetBanking.Core.Domain.Entities.Transactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdRecipientProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUserProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProducToId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductFromId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProducToId");

                    b.HasIndex("ProductFromId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("NetBanking.Core.Domain.Entities.Products", b =>
                {
                    b.HasOne("NetBanking.Core.Domain.Entities.BankProducts", "Produc")
                        .WithMany("Products")
                        .HasForeignKey("IdProducType")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Produc");
                });

            modelBuilder.Entity("NetBanking.Core.Domain.Entities.Transactions", b =>
                {
                    b.HasOne("NetBanking.Core.Domain.Entities.Products", "ProducTo")
                        .WithMany()
                        .HasForeignKey("ProducToId");

                    b.HasOne("NetBanking.Core.Domain.Entities.Products", "ProductFrom")
                        .WithMany()
                        .HasForeignKey("ProductFromId");

                    b.Navigation("ProductFrom");

                    b.Navigation("ProducTo");
                });

            modelBuilder.Entity("NetBanking.Core.Domain.Entities.BankProducts", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
